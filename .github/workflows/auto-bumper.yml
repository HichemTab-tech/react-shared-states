#file: noinspection GithubFunctionSignatureValidation
name: Auto Bump
on:
  issue_comment:
    types: [created]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  respond:
    runs-on: ubuntu-latest
    if: (contains( github.event.pull_request.labels.*.name, 'auto-bump') || (contains(github.event.comment.body, '@github-bot') && contains(github.event.comment.body, 'bump')))
    steps:

      - name: React üëç to triggering comment
        uses: actions/github-script@v7
        with:
          script: |
            const { eventName, repo, payload } = context;
            const { owner, repo: repoName } = repo;
            
            const commentId = payload?.comment?.id;
            if (!commentId) {
              core.setFailed('No triggering comment found in payload.');
              return;
            }
            
            if (eventName === 'issue_comment') {
              await github.rest.reactions.createForIssueComment({
                owner,
                repo: repoName,
                comment_id: commentId,
                content: '+1',
              });
            } else if (eventName === 'pull_request_review_comment') {
              await github.rest.reactions.createForPullRequestReviewComment({
                owner,
                repo: repoName,
                comment_id: commentId,
                content: '+1',
              });
            } else {
              core.setFailed(`Unsupported event: ${eventName}. Use issue_comment or pull_request_review_comment.`);
            }

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment to PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('./package.json', 'utf8'));
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Okay BOSS, ‚è≥ Bumping version from ${pkg.version}...`
            })


      - name: Setup Node & pnpm
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

      - name: Bump version
        run: |
          pnpm run bump
          git add package.json
          git commit -m "chore: bump version"
          git push

      - name: Add comment to PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('./package.json', 'utf8'));
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ Version bumped to ${pkg.version}`
            })
    
